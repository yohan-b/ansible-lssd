#  Instructs all the peer servers to connect to the tracker and start download and spreading pieces and files amongst themselves.
# You must specify a valid 'tag' argument.
# Once the download is complete on a server, that server will fork the download process and seed for 30 seconds while returning control to Ansible.
# extract the files to the passed in 'destination_path' argument to destination_path/TAG/*.
# To not create this tag named directory, pass in the 'no_tag_directory=1' argument.
# If the directory is not empty, this command will fail.
# To clean it, pass in the 'unsafe_please_delete=1' argument.
# The compressed tgz in /{{ default_temp_path }} is never removed.
# When this task completes, all files have been transferred and moved into the requested directory.
- name: set destination_path
  set_fact: destination_path={{ destination_path }}/{{ tag }}
  when: not no_tag_directory
  tags: peer

- name: mkdir destination_path
  file: path={{ destination_path }} state=directory owner={{ destination_owner }} group={{ destination_group }} mode={{ destination_mod }}
  tags: peer

- name: delete destination_path/*
  shell: rm -rf '{{ destination_path }}/*'
  when: unsafe_please_delete
  tags: peer

- name: supprime
  shell: /opt/{{ peer_ADABO }}/Logiciel/BDIG/Specifique_CAT/Scripts/clone_torrent_etape_supprime.sh
  when: not only_deploy_archive
  tags: peer

- name: check destination_path/*
  shell: |
    (
      find {{ destination_path }}/* >/dev/null 2>&1 &&
      echo "destination_path {{ destination_path }} on $HOSTNAME is not empty" &&
      exit 1 
    ) ||
    exit 0
  when: not no_tag_directory
  tags: peer

- name: upload torrent file
  copy: src=/tmp/{{ filename|basename }}.torrent dest={{ filename }}.torrent
  tags: peer

- name: copy aria2 RHEL6
  copy: src={{ src_path }}/packages/aria2-1.16.4-1.el6.rf.x86_64.rpm dest="{{ ansible_cache_path }}/"
  tags: peer
  when: ansible_distribution_major_version == "6"

- name: copy nettle RHEL6
  copy: src={{ src_path }}/packages/nettle-2.2-1.el6.rf.x86_64.rpm dest="{{ ansible_cache_path }}/"
  tags: peer
  when: ansible_distribution_major_version == "6"

- name: copy aria2 RHEL7
  copy: src={{ src_path }}/packages/aria2-1.18.10-2.el7.1.x86_64.rpm dest="{{ ansible_cache_path }}/"
  tags: peer
  when: ansible_distribution_major_version == "7"

- name: install aria2 RHEL6
  shell: yum -y localinstall "{{ ansible_cache_path }}"/aria2*.rpm "{{ ansible_cache_path }}"/nettle*.rpm --nogpgcheck
  tags: peer
  when: ansible_distribution_major_version == "6"

- name: install aria2 RHEL7
  shell: yum -y localinstall "{{ ansible_cache_path }}"/aria2*.rpm --nogpgcheck
  tags: peer
  when: ansible_distribution_major_version == "7"

- name: clean existing files
  shell: rm -rf {{ filename }} {{ filename }}.aria2
  when: remove_existing
  tags: peer

- name: run aria2
  shell: aria2c --console-log-level=notice --peer-id-prefix={{ inventory_hostname[-8:] }} --disable-ipv6 --enable-dht=false --listen-port=6881 --allow-overwrite=true --bt-max-peers=4 --enable-peer-exchange=true --bt-seed-unverified=true --seed-time=1 -d '{{ destination_path }}' '{{ filename }}.torrent' &> /var/log/{{ peer_ADABO }}/BDIG/torrent.log
#  shell: aria2c --console-log-level=debug --disable-ipv6 --enable-dht=false --listen-port=6881 --allow-overwrite=true --bt-max-peers=4 --enable-peer-exchange=true --bt-seed-unverified=true --seed-time=1 -d '{{ destination_path }}' '{{ filename }}.torrent' &> /var/log/{{ peer_ADABO }}/BDIG/torrent.log
  tags: peer

#- name:  run murder_client.py
#  shell: python {{ remote_murder_path }}/murder_client.py peer '{{ filename }}.torrent' '{{filename}}' {{ ansible_default_ipv4['address'] }}
#  tags: peer

- name: tar xf
  shell: unpigz -c {{ filename }} | tar -x -C "{{ destination_path }}"
  when: not only_deploy_archive
  tags: peer

- name: clean downloaded files
  shell: rm -rf {{ filename }} {{ filename }}.torrent
  tags: peer

- name: clone_torrent.sh
  shell: /opt/{{ peer_ADABO }}/Logiciel/BDIG/Specifique_CAT/Scripts/clone_torrent.sh
  when: not only_deploy_archive
  tags: peer
